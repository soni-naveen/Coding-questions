Take as input a 2-d array. Print the 2-D array in spiral form anti-clockwise.

Input Format
Two integers M(row) and N(colomn) and further M * N integers(2-d array numbers).

Constraints
Both M and N are between 1 to 10.

Output Format
All M * N integers separated by commas with 'END' written in the end(as shown in example).

Sample Input
4 4
11 12 13 14
21 22 23 24
31 32 33 34
41 42 43 44
Sample Output
11, 21, 31, 41, 42, 43, 44, 34, 24, 14, 13, 12, 22, 32, 33, 23, END
Explanation
For spiral level anti-clockwise traversal, Go for first column-> last row ->last column-> first row and then do the same traversal for the remaining matrix.


//********************************************************** S 0 L U T I O N *****************************************************************

import java.util.*;
public class Main {
    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        int m = sc.nextInt();
        int n = sc.nextInt();

        int [][] arr = new int[m][n];
        for(int i=0; i<m; i++){
            for(int j=0; j<n; j++){
                arr[i][j] = sc.nextInt();
            }
        }
        int st_row = 0;
        int end_row = m-1;
        int st_col = 0;
        int end_col = n-1;

        while(st_row<=end_row && st_col<=end_col){

            for(int i=st_row; i<=end_row; i++){
                System.out.print(arr[i][st_col]+", ");
            }
            st_col++;

            for(int j=st_col; j<=end_col; j++){
                System.out.print(arr[end_row][j]+", ");
            }
            end_row--;

            for(int k=end_row; k>=st_row; k--){
                System.out.print(arr[k][end_col]+", ");
            }
            end_col--;

            for(int l=end_col; l>=st_col; l--){
                System.out.print(arr[st_row][l]+", ");
            }
            st_row++;
        }
        System.out.print("END");
    }
}
